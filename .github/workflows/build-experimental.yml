name: experimental
on: [push, pull_request]

env:
 CIBW_BEFORE_BUILD_LINUX: "rm -rf ~/.pyxbld && yum install -y libev libev-devel openssl openssl-devel"
 CIBW_ENVIRONMENT: "CASS_DRIVER_BUILD_CONCURRENCY=2 CFLAGS='-g0 -O3'"
 CIBW_BUILD: "cp38* cp39* cp310* cp311*"
 CIBW_SKIP: "*musllinux*"
jobs:
  build_wheels:
    if: contains(github.event.pull_request.labels.*.name, 'test-build-experimental') || github.event_name == 'push' && endsWith(github.event.ref, 'scylla')
    # The host should always be linux
    runs-on: ubuntu-latest
    name: Build experimental ${{ matrix.archs }} wheels
    strategy:
      fail-fast: false
      matrix:
        archs: [ aarch64, ppc64le ]

    steps:
      - uses: actions/checkout@v2.1.0

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
        if: runner.os == 'Linux'

      - uses: actions/setup-python@v2
        name: Install Python

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.12.1

      - name: Build wheels
        run: |
          python -m cibuildwheel --archs  ${{ matrix.archs }} --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && endsWith(github.event.ref, 'scylla')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

